FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# tugas

## Request Token [/oauth/token]

    Request Token is a api to request token to access the other API

### Request Token [POST /oauth/token]

+ Request (application/json)

      + Headers

             Accept : application/json

      +  Body

                {
                    "grant_type":"password",
                    "client_id":3,
                    "client_secret":"VXmeQYamn3zYY1bw0pDvWsIfxh8RKp6bA7CAHW8Z",
                    "username":"darda.abby@gmail.com",
                    "password":"abbydarda",
                    "scope":""
                }

+ Response 200 (application/json)

      + Body

                {
                    "token_type": "Bearer",
                    "expires_in": 31536000,
                    "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6IjQyMmRlMjM2M2Y0YjJkZWM2YmU4NzAwNjdjNjFhNDJiNzE3MWYxYmVjNzQ2Y2VkNWRjZGUwMTM5M2JkYzJlZTIyZTc1ZmY4NzFjMTVmOWM1In0.eyJhdWQiOiIzIiwianRpIjoiNDIyZGUyMzYzZjRiMmRlYzZiZTg3MDA2N2M2MWE0MmI3MTcxZjFiZWM3NDZjZWQ1ZGNkZTAxMzkzYmRjMmVlMjJlNzVmZjg3MWMxNWY5YzUiLCJpYXQiOjE1MTUxNTU2MjQsIm5iZiI6MTUxNTE1NTYyNCwiZXhwIjoxNTQ2NjkxNjI0LCJzdWIiOiI5Iiwic2NvcGVzIjpbIioiXX0.O_jV-sqwhP3ukM_qsn0u9yWxLKJug2sxRUskxG1wxNQC0zn3yT7W8UxAv9QURktzgQe52aVro7Bjm9e66WPBrlr6D58yBmEVg_8iycEGC6aCAtI6eg7tkPHVDy8CgbQOV7_qLixnD2a7HGAWVpsjD3kJF3mvpnHlgU9aOs5xcYrCwuM0YAcnLLvC5_mNEajheY2KU9J8GcdJvzKfuNb1cWcYBc7Ga16Ul2o-dTgy1vX_vev9f0g479bq8zU3dPY34ICqlML7Ca5cJZp1hR_CSWffZ9Mfu-OlAZudoCOm7o_7EIC85YFbycVhek4SRld6rRD9__vNcLdIicCn5V41Swe_j6Rf747HHSlPxsWW3HM64_svShtsiAhZDQwra-3EoogVauoGN80qHhHzWtNq3gZQ2ZHQ5rOtWgEBW5Fp5jkAkOEmtqqXwRUqamlIhMZEuo3YCiF2_BDi2oyIkY0JBVSrfGfBlJD77IbFLnYpKmUruIf3AW2Nzdgr8Bg1hSw0be5vCO00wwsqTBJ2eQfZVZls_J8lLs5oEbMvpnIHRzB0UVVi32SAXvXJO9_JjDyEPQsAf9OoGejlziSF00oStP8t_RDBYJ_CZDwC_YKXuxEPE4ED2Sp8AewkVyZ9Op58z89cQKPgiHrD_7I3fYF6_UITpHhSpdeeSjz8v87L2dI",
                    "refresh_token": "def50200e9a7becb279b75576d40c0cc9c4c8223db892706d48a7096843cb915255dfba1b94ee563aa40af12c4e2c7534c7730defdfb8ab1c2c300bdd728755c43679d5791f43666b659f2891fa06e3b78bfffa38caedb7310b19ab2c49668072cf543c43281da79e206e33135de4ead04dbe9f114d8062c7300def8f3f61e753f0ed650488cd6a87fb14850353030067cf99f4ace69b905a745636828843fc0e88f45a50d38e8769d0bdc253aae9d8f3450a7e00d57d3775486333e55771e5cafdd34258720b306a2bc9c7d282c4fa025cae21be88f39de7cf498023ca564024e37037194d7d5eb4d40be8aec61e044a259566595ec215f01653a214947b9166461fb07fcecbe8b51ccf119a1ca2e69da99ab167fc72b42e42dd70e95418419d4ce60b87832a4cebd3eb7180c36933f5773b158e9bc0067dd586bc32b834ed70a121e5232a8f35cae06e8ff47529a54a9af2d7789df3c2d17f426de85a5bd2b3168"
                }

## Posts API [/posts]

    Post is a API to retrive, create, update, delete a post

### Retrieve All Post [GET /posts]

+ Request (application/json)

      + Headers

              Authorization : Bearer abcdefghaiklmnopqrstupwxyz

              Accept : application/json

+ Response 200 (application/json)

      + Body

              [
                {
                  "userId":1,
                  "id":1,
                  "title":"judul 1",
                  "body":"ini adalah konten 1"
                },
                {
                  "userId":2,
                  "id":2,
                  "title":"judul 2",
                  "body":"ini adalah konten 2"
                },
                {
                  "userId":3,
                  "id":3,
                  "title":"judul 3",
                  "body":"ini adalah konten 3"
                },
                {
                  "userId":4,
                  "id":4,
                  "title":"judul 4",
                  "body":"ini adalah konten 4"
                },
                {
                  "userId":5,
                  "id":5,
                  "title":"judul 5",
                  "body":"ini adalah konten 5"
                },
                {
                  "userId":6,
                  "id":6,
                  "title":"judul 6",
                  "body":"ini adalah konten 6"
                },
                {
                  "userId":7,
                  "id":7,
                  "title":"judul 7",
                  "body":"ini adalah konten 7"
                },
                {
                  "userId":8,
                  "id":8,
                  "title":"judul 8",
                  "body":"ini adalah konten 8"
                },
                {
                  "userId":9,
                  "id":9,
                  "title":"judul 9",
                  "body":"ini adalah konten 9"
                },
                {
                  "userId":10,
                  "id":10,
                  "title":"judul 10",
                  "body":"ini adalah konten 10"
                }
              ]

### Retrieve Post by Id [GET /posts/{id}]

+ Parameters

      + id : 1

+ Request (application/json)

      + Headers

              Authorization : Bearer abcdefghaiklmnopqrstupwxyz

              Accept : application/json

+ Response 200 (application/json)

      + Body

              {
                "userId":1,
                "id":1,
                "title":"ini judul 1",
                "body":"ini konten 1"
              }

### Retrieve Comment from Post by PostId [GET /posts/{postId}/comments]

+ Parameters

      + postId : 1

+ Request (application/json)

      + Headers

              Authorization : Bearer abcdefghaiklmnopqrstupwxyz

              Accept : application/json

+ Response 200 (application/json)

      + Body

              [
                {
                  "postId":1,
                  "id":2,
                  "name":"ini name 2",
                  "email":"2@gmail.com",
                  "body":"ini komen 2"
                },
                {
                  "postId":1,
                  "id":3,
                  "name":"ini name 3",
                  "email":"3@gmail.com",
                  "body":"ini komen 3"
                },
                {
                  "postId":1,
                  "id":4,
                  "name":"ini name 4",
                  "email":"4gmail.com",
                  "body":"ini komen 4"
                },
                {
                  "postId":1,
                  "id":5,
                  "name":"ini name 5",
                  "email":"5@gmail.com",
                  "body":"ini komen 5"
                }
              ]

### Retrieve Post by UserId [GET /posts{?userId}]

+ Parameters

      + userId : 1

+ Request (application/json)

      + Headers

              Authorization : Bearer abcdefghaiklmnopqrstupwxyz

              Accept : application/json

+ Response 200 (application/json)

      + Body

              [
                {
                  "userId":1,
                  "id":1,
                  "title":"judul 1",
                  "body":"ini adalah konten 1"
                },
                {
                  "userId":1,
                  "id":2,
                  "title":"judul 2",
                  "body":"ini adalah konten 2"
                },
                {
                  "userId":1,
                  "id":3,
                  "title":"judul 3",
                  "body":"ini adalah konten 3"
                },
                {
                  "userId":1,
                  "id":4,
                  "title":"judul 4",
                  "body":"ini adalah konten 4"
                },
                {
                  "userId":1,
                  "id":5,
                  "title":"judul 5",
                  "body":"ini adalah konten 5"
                },
                {
                  "userId":1,
                  "id":6,
                  "title":"judul 6",
                  "body":"ini adalah konten 6"
                },
                {
                  "userId":1,
                  "id":7,
                  "title":"judul 7",
                  "body":"ini adalah konten 7"
                },
                {
                  "userId":1,
                  "id":8,
                  "title":"judul 8",
                  "body":"ini adalah konten 8"
                },
                {
                  "userId":1,
                  "id":9,
                  "title":"judul 9",
                  "body":"ini adalah konten 9"
                },
                {
                  "userId":1,
                  "id":10,
                  "title":"judul 10",
                  "body":"ini adalah konten 10"
                }
              ]

### Create a New Post [POST /posts]

+ Request (application/json)

      + Headers

              Authorization : Bearer abcdefghaiklmnopqrstupwxyz

              Accept : application/json

      + Body

              {
                "userId":1,
                "title":"ini judul 1",
                "body":"ini konten 1"
              }

+ Response 201 (application/json)

      + Body

              {
                "userId":1,
                "id":1,
                "title":"ini judul 1",
                "body":"ini konten 1"
              }

### Update a Post [PUT /posts/{id}]

+ Parameters

      + id : 1

+ Request (application/json)

      + Headers

              Authorization : Bearer abcdefghaiklmnopqrstupwxyz

              Accept : application/json

      + Body

              {
                "userId":1
                "title":"ini judul satu",
                "body":"ini konten satu"
              }

+ Response 200 (application/json)

      + Body

              {
                "userId":1,
                "id":1,
                "title":"ini judul satu",
                "body":"ini konten satu"
              }

### Delete a Post [DELETE /posts/{id}]

+ Parameters

      + id : 1

+ Request (application/json)

      + Headers

              Authorization: Bearer abcdefghaiklmnopqrstupwxyz

              Accept : application/json

+ Response 200 (application/json)

      + Body

              {}

## Comments API [/comments]

    Comments is a API to retrive, create, update, delete a comment

### Retrieve All Comments [GET /comments]

+ Request (application/json)

      + Headers

              Authorization : Bearer abcdefghaiklmnopqrstupwxyz

              Accept : application/json

+ Response 200 (application/json)

      + Body

            [
                {
                  "postId":1,
                  "id":1,
                  "name":"ini name 1",
                  "email":"1@gmail.com",
                  "body":"ini komen 1"
                },
                {
                  "postId":1,
                  "id":2,
                  "name":"ini name 2",
                  "email":"2@gmail.com",
                  "body":"ini komen 2"
                },
                {
                  "postId":1,
                  "id":3,
                  "name":"ini name 3",
                  "email":"3@gmail.com",
                  "body":"ini komen 3"
                },
                {
                  "postId":1,
                  "id":4,
                  "name":"ini name 4",
                  "email":"4gmail.com",
                  "body":"ini komen 4"
                },
                {
                  "postId":1,
                  "id":5,
                  "name":"ini name 5",
                  "email":"5@gmail.com",
                  "body":"ini komen 5"
                },
                {
                  "postId":2,
                  "id":6,
                  "name":"ini name 7",
                  "email":"7@gmail.com",
                  "body":"ini komen 7"
                },
                {
                  "postId":2,
                  "id":7,
                  "name":"ini name 7",
                  "email":"7@gmail.com",
                  "body":"ini komen 7"
                },
                {
                  "postId":2,
                  "id":8,
                  "name":"ini name 8",
                  "email":"8@gmail.com",
                  "body":"ini komen 8"
                },
                {
                  "postId":2,
                  "id":9,
                  "name":"ini name 9",
                  "email":"9gmail.com",
                  "body":"ini komen 9"
                },
                {
                  "postId":2,
                  "id":10,
                  "name":"ini name 10",
                  "email":"10@gmail.com",
                  "body":"ini komen 10"
                }
            ]


### Retrieve Comment by Id [GET /comments/{id}]

+ Parameters

      + id: 1

+ Request (application//json)

      + Headers

              Authorization : Bearer abcdefghaiklmnopqrstupwxyz

              Accept : application/json

+ Response 200 (application/json)

      + Body

              {
                "postId":1,
                "id":1,
                "name":"ini name 1",
                "email":"1@gmail.com",
                "body":"ini komen 1"
              }

### Retrieve Comment by PostId [GET /comments{?postId}]

+ Parameters

      + postId : 1

+ Request (application/json)

      + Headers

              Authorization : Bearer abcdefghaiklmnopqrstupwxyz

              Accept : application/json

+ Response 200 (application/json)

      + Body

              [
                {
                  "postId":1,
                  "id":1,
                  "name":"ini name 1",
                  "email":"1@gmail.com",
                  "body":"ini komen 1"
                },
                {
                  "postId":1,
                  "id":2,
                  "name":"ini name 2",
                  "email":"2@gmail.com",
                  "body":"ini komen 2"
                },
                {
                  "postId":1,
                  "id":3,
                  "name":"ini name 3",
                  "email":"3@gmail.com",
                  "body":"ini komen 3"
                },
                {
                  "postId":1,
                  "id":4,
                  "name":"ini name 4",
                  "email":"4gmail.com",
                  "body":"ini komen 4"
                },
                {
                  "postId":1,
                  "id":5,
                  "name":"ini name 5",
                  "email":"5@gmail.com",
                  "body":"ini komen 5"
                }
              ]

### Create a New Comments [POST /comments]

+ Request (application/json)

      + Headers

              Authorization : Bearer abcdefghaiklmnopqrstupwxyz

              Accept : application/json

      + Body

              {
                  "postId":1,
                  "name":"ini name 1",
                  "email":"1@gmail.com",
                  "body":"ini komen 1"
              }

+ Response 201 (application/json)

      + Body

            {
                "postId":1,
                "id":1,
                "name":"ini name 1",
                "email":"1@gmail.com",
                "body":"ini komen 1"
            }

### Update a Comments [PUT /comments/{id}]

+ Parameters

      + id:1

+ Request (application/json)

      + Headers

              Authorization : Bearer abcdefghaiklmnopqrstupwxyz

              Accept : application/json

      + Body

              {
                  "postId":1,
                  "name":"ini name satu",
                  "email":"satu@gmail.com",
                  "body":"ini komen satu"
              }

+ Response 200 (application/json)

      + Body

            {
                "postId":1,
                "id":1,
                "name":"ini name satu",
                "email":"satu@gmail.com",
                "body":"ini komen satu"
            }

### Delete a Comments [DELETE /comments/{id}]

+ Parameters

      + id:1

+ Request (application/json)

      + Headers

              Authorization : Bearer abcdefghaiklmnopqrstupwxyz

              Accept : application/json

+ Response 200 (application/json)

      + Body

              {}

## Albums API [/albums]

    Albums is a API to retrive, create, update, delete a album

### Retrieve All Albums [GET /albums]

+ Request (application/json)

     + Headers

            Authoriation: Bearer abcdefghijklmnopqrstupwxyz

            Accept : application/json

+ Response 200 (application/json)

     + Body

            [
              {
                "userId": 1,
                "id": 1,
                "title": "album 1"
              },
              {
                "userId": 1,
                "id": 2,
                "title": "album 2"
              },
              {
                "userId": 1,
                "id": 3,
                "title": "album 3"
              },
              {
                "userId": 1,
                "id": 4,
                "title": "album 4"
              },
              {
                "userId": 1,
                "id": 5,
                "title": "album 5"
              },
              {
                "userId": 2,
                "id": 6,
                "title": "album 6"
              },
              {
                "userId": 2,
                "id": 7,
                "title": "album 7"
              },
              {
                "userId": 2,
                "id": 8,
                "title": "album 8"
              },
              {
                "userId": 2,
                "id": 9,
                "title": "album 9"
              },
              {
                "userId": 2,
                "id": 10,
                "title": "album 10"
              }
            ]

### Retrieve Albums by Id [GET /albums/{id}]

+ Parameters

     + id:1

+ Request (application/json)

     + Headers

            Authoriation: Bearer abcdefghijklmnopqrstupwxyz

            Accept : application/json

+ Response 200 (application/json)

     + Body

            {
              "userId": 1,
              "id": 1,
              "title": "album 1"
            }

### Retrieve Albums by UserId [GET /albums/{?userId}]

+ Parameters

     + userId:1

+ Request (application/json)

     + Headers

            Authoriation: Bearer abcdefghijklmnopqrstupwxyz

            Accept : application/json

+ Response 200 (application/json)

     + Body

            [
              {
                "userId": 1,
                "id": 1,
                "title": "album 1"
              },
              {
                "userId": 1,
                "id": 2,
                "title": "album 2"
              },
              {
                "userId": 1,
                "id": 3,
                "title": "album 3"
              },
              {
                "userId": 1,
                "id": 4,
                "title": "album 4"
              },
              {
                "userId": 1,
                "id": 5,
                "title": "album 5"
              }
            ]

### Create a New Album [POST /albums]

+ Request (application/json)

     + Headers

            Authoriation: Bearer abcdefghijklmnopqrstupwxyz

            Accept : application/json

     + Body

            {
              "userId": 1,
              "title": "album 1"
            }

+ Response 200 (application/json)

     + Body

            {
              "userId": 1,
              "id": 1,
              "title": "album 1"
            }

### Update a Albums [PUT /albums/{id}]

+ Parameters

     + id:1

+ Request (application/json)

     + Headers

            Authoriation: Bearer abcdefghijklmnopqrstupwxyz

            Accept : application/json

     + Body

            {
              "userId": 1,
              "title": "album satu"
            }

+ Response 200 (application/json)

     + Body

            {
              "userId": 1,
              "id": 1,
              "title": "album satu"Accept : application/json
            }

### Delete a Album [DELETE /albums/{id}]

+ ParametersAccept : application/json

     + id:1

+ Request (application/json)

     + Headers

            Authoriation: Bearer abcdefghijklmnopqrstupwxyz

            Accept : application/json

+ Response 200 (application/json)

      + Body

              {}

## Photos API [/photos]

    Photos is a API to retrive, create, update, delete a photo

### Retrieve All Photos [GET /photos]

+ Request (application/json)

     + Headers

            Authoriation: Bearer abcdefghijklmnopqrstupwxyz

            Accept : application/json

+ Response 200 (application/json)

            [
              {
                "albumId": 1,
                "id": 1,
                "title": "judul 1",
                "url": "http://placehold.it/600/92c952",
                "thumbnailUrl": "http://placehold.it/150/92c952"
              },
              {
                "albumId": 1,
                "id": 2,
                "title": "judul 2",
                "url": "http://placehold.it/600/771796",
                "thumbnailUrl": "http://placehold.it/150/771796"
              },
              {
                "albumId": 1,
                "id": 3,
                "title": "judul 3",
                "url": "http://placehold.it/600/24f355",
                "thumbnailUrl": "http://placehold.it/150/24f355"
              },
              {
                "albumId": 1,
                "id": 4,
                "title": "judul 4",
                "url": "http://placehold.it/600/d32776",
                "thumbnailUrl": "http://placehold.it/150/d32776"
              },
              {
                "albumId": 1,
                "id": 5,
                "title": "judul 5",
                "url": "http://placehold.it/600/f66b97",
                "thumbnailUrl": "http://placehold.it/150/f66b97"
              },
              {
                "albumId":2,
                "id": 6,
                "title": "judul 6",
                "url": "http://placehold.it/600/56a8c2",
                "thumbnailUrl": "http://placehold.it/150/56a8c2"
              },
              {
                "albumId": 2,
                "id": 7,
                "title": "judul 7",
                "url": "http://placehold.it/600/b0f7cc",
                "thumbnailUrl": "http://placehold.it/150/b0f7cc"
              },
              {
                "albumId": 2,
                "id": 8,
                "title": "judul 8",
                "url": "http://placehold.it/600/54176f",
                "thumbnailUrl": "http://placehold.it/150/54176f"
              },
              {
                "albumId": 2,
                "id": 9,
                "title": "judul 9",
                "url": "http://placehold.it/600/51aa97",
                "thumbnailUrl": "http://placehold.it/150/51aa97"
              },
              {
                "albumId": 2,
                "id": 10,
                "title": "judul 10",
                "url": "http://placehold.it/600/810b14",
                "thumbnailUrl": "http://placehold.it/150/810b14"
              }
            ]

### Retrieve Photos by Id [GET /photos/{id}]

+ Parameters

     + id:1

+ Request (application/json)

     + Headers

            Authoriation: Bearer abcdefghijklmnopqrstupwxyz

            Accept : application/json

+ Response 200 (application/json)

     + Body

             {
               "albumId": 1,
               "id": 1,
               "title": "judul 1",
               "url": "http://placehold.it/600/810b14",
               "thumbnailUrl": "http://placehold.it/150/810b14"
             }

### Retrieve Photos by AlbumId [GET /photos/{?albumId}]

+ Parameters

     + albumId:1

+ Request (application/json)

     + Headers

            Authoriation: Bearer abcdefghijklmnopqrstupwxyz

            Accept : application/json

+ Response 200 (application/json)

     + Body

            [
              {
                "albumId": 1,
                "id": 1,
                "title": "judul 1",
                "url": "http://placehold.it/600/92c952",
                "thumbnailUrl": "http://placehold.it/150/92c952"
              },
              {
                "albumId": 1,
                "id": 2,
                "title": "judul 2",
                "url": "http://placehold.it/600/771796",
                "thumbnailUrl": "http://placehold.it/150/771796"
              },
              {
                "albumId": 1,
                "id": 3,
                "title": "judul 3",
                "url": "http://placehold.it/600/24f355",
                "thumbnailUrl": "http://placehold.it/150/24f355"
              },
              {
                "albumId": 1,
                "id": 4,
                "title": "judul 4",
                "url": "http://placehold.it/600/d32776",
                "thumbnailUrl": "http://placehold.it/150/d32776"
              },
              {
                "albumId": 1,
                "id": 5,
                "title": "judul 5",
                "url": "http://placehold.it/600/f66b97",
                "thumbnailUrl": "http://placehold.it/150/f66b97"
              }
            ]

### Create a New Photos [POST /photos]

+ Request (application/json)

     + Headers

            Authoriation: Bearer abcdefghijklmnopqrstupwxyz

            Accept : application/json

     + Body

              {
                "albumId": 1,
                "title": "judul 1",
                "url": "http://placehold.it/600/92c952",
                "thumbnailUrl": "http://placehold.it/150/92c952"
              }

+ Response 201 (application/json)

     + Body

              {
                "albumId": 1,
                "id": 1,
                "title": "judul 1",
                "url": "http://placehold.it/600/92c952",
                "thumbnailUrl": "http://placehold.it/150/92c952"
              }

### Update a Photos [PUT /photos/{id}]

+ Parameters

     + id:1

+ Request (application/json)

     + Headers

            Authoriation: Bearer abcdefghijklmnopqrstupwxyz

            Accept : application/json

     + Body

              {
                "albumId": 1,
                "title": "judul 1",
                "url": "http://placehold.it/600/92c950",
                "thumbnailUrl": "http://placehold.it/150/92c950"
              }

+ Response 200 (application/json)

     + Body

              {
                "albumId": 1,
                "id": 1,
                "title": "judul 1",
                "url": "http://placehold.it/600/92c950",
                "thumbnailUrl": "http://placehold.it/150/92c950"
              }

### Delete Photos [DELETE /photos/{id}]

+ Parameters

     + id:1

+ Request (application/json)

     + Headers

            Authoriation: Bearer abcdefghijklmnopqrstupwxyz

            Accept : application/json

+ Response 200 (application/json)

      + Body

              {}

## Todos API [/todos]

    Todos is a API to retrive, create, update, delete a todo

### Retrieve All Todos [GET /todos]

+ Request (application/json)

     + Headers

            Authoriation: Bearer abcdefghijklmnopqrstupwxyz

+ Response 200 (application/json)

            [
              {
                "userId": 1,
                "id": 1,
                "title": "judul 1",
                "completed": false
              },
              {
                "userId": 1,
                "id": 2,
                "title": "judul 2",
                "completed": false
              },
              {
                "userId": 1,
                "id": 3,
                "title": "judul 3",
                "completed": false
              },
              {
                "userId": 1,
                "id": 4,
                "title": "judul 4",
                "completed": true
              },
              {
                "userId": 1,
                "id": 5,
                "title": "judul 5",
                "completed": false
              },Accept : application/json
              {
                "userId": 2,
                "id": 6,
                "title": "judul 6",
                "completed": false
              },
              {
                "userId": 2,
                "id": 7,
                "title": "judul 7",
                "completed": false
              },
              {
                "userId": 2,
                "id": 8,
                "title": "judul 8",
                "completed": true
              },
              {
                "userId": 2,
                "id": 9,
                "title": "judul 9",
                "completed": false
              },
              {
                "userId": 2,
                "id": 10,
                "title": "judul 10",
                "completed": true
              }
            ]

### Retrieve Todos by Id [GET /todos/{id}]

+ Parameters

     + id:1

+ Request (application/json)

     + Headers

            Authoriation: Bearer abcdefghijklmnopqrstupwxyz

            Accept : application/json

+ Response 200 (application/json)

     + Body

            {
               "userId": 1,
               "id": 1,
               "title": "judul 1",
               "completed": false
            }

### Retrieve Todos by UserId [GET /todos/{?userId}]

+ Parameters

     + userId:1

+ Request (application/json)

     + Headers

            Authoriation: Bearer abcdefghijklmnopqrstupwxyz

            Accept : application/json

+ Response 200 (application/json)

     + Body

            [
              {
                "userId": 1,
                "id": 1,
                "title": "judul 1",
                "completed": false
              },
              {
                "userId": 1,
                "id": 2,
                "title": "judul 2",
                "completed": false
              },
              {
                "userId": 1,
                "id": 3,
                "title": "judul 3",
                "completed": false
              },
              {
                "userId": 1,
                "id": 4,
                "title": "judul 4",
                "completed": true
              },
              {
                "userId": 1,
                "id": 5,
                "title": "judul 5",
                "completed": false
              }
            ]

### Create a New Todos [POST /todos]

+ Request (application/json)

     + Headers

            Authoriation: Bearer abcdefghijklmnopqrstupwxyz

            Accept : application/json

     + Body

            {
               "userId": 1,
               "title": "judul 1",
               "completed": false
            }

+ Response 201 (application/json)

     + Body

            {
               "userId": 1,
               "id": 1,
               "title": "judul 1",
               "completed": false
            }

### Update a Todos [PUT /todos/{id}]

+ Parameters

     + id:1

+ Request (application/json)

     + Headers

            Authoriation: Bearer abcdefghijklmnopqrstupwxyz

            Accept : application/json

     + Body

            {
               "userId": 1,
               "title": "judul satu",
               "completed": false
            }

+ Response 200 (application/json)

     + Body

            {
               "userId": 1,
               "id": 1,
               "title": "judul satu",
               "completed": false
            }

### Delete a Todos [DELETE /todos/{id}]

+ Parameters

     + id:1

+ Request (application/json)

     + Headers

            Authoriation: Bearer abcdefghijklmnopqrstupwxyz

            Accept : application/json

+ Response 200 (application/json)

      + Body

              {}

## Users API [/users]

    Users is a API to retrive, create, update, delete a user

### Retrieve All Users [GET /users]

+ Request (application/json)

     + Headers

            Authoriation: Bearer abcdefghijklmnopqrstupwxyz

            Accept : application/json

+ Response 200 (application/json)

            [
              {
                "id": 1,
                "name": "nama 1",
                "username": "satu",
                "email": "1@gmail.com",
                "address": {
                  "street": "jalan 1",
                  "suite": "apt 1",
                  "city": "kota 1",
                  "zipcode": "92998-3874",
                  "geo": {
                    "lat": "-37.3159",
                    "lng": "81.1496"
                  }
                },
                "phone": "089639534610",
                "website": "satu.org",
                "company": {
                  "name": "satu.Inc",
                  "catchPhrase": "Multi-layered client-server neural-net",
                  "bs": "harness real-time e-markets"
                }
              },
              {
                "id": 2,
                "name": "nama 2",
                "username": "dua",
                "email": "dua@gmail.com",
                "address": {
                  "street": "jalan 2",
                  "suite": "apt 2",
                  "city": "kota 2",
                  "zipcode": "90566-7771",
                  "geo": {
                    "lat": "-43.9509",
                    "lng": "-34.4618"
                  }
                },
                "phone": "089629534811",
                "website": "dua.net",
                "company": {
                  "name": "dua.Inc",
                  "catchPhrase": "Proactive didactic contingency",
                  "bs": "synergize scalable supply-chains"
                }
              },
              {
                "id": 3,
                "name": "nama 3",
                "username": "tiga",
                "email": "tiga@gmail.com",
                "address": {
                  "street": "jalan 3",
                  "suite": "Suite 3",
                  "city": "kota 3",
                  "zipcode": "59590-4157",
                  "geo": {
                    "lat": "-68.6102",
                    "lng": "-47.0653"
                  }
                },
                "phone": "089639534812",
                "website": "tiga.info",
                "company": {
                  "name": "tiga.Inc",
                  "catchPhrase": "Face to face bifurcated interface",
                  "bs": "e-enable strategic applications"
                }
            ]

### Retrieve Users by Id [GET /users/{id}]

+ Parameters

     + id:1

+ Request (application/json)

     + Headers

            Authoriation: Bearer abcdefghijklmnopqrstupwxyz

            Accept : application/json

+ Response 200 (application/json)

     + Body

              {
                "id": 1,
                "name": "nama 1",
                "username": "satu",
                "email": "1@gmail.com",
                "address": {
                  "street": "jalan 1",
                  "suite": "apt 1",
                  "city": "kota 1",
                  "zipcode": "92998-3874",
                  "geo": {
                    "lat": "-37.3159",
                    "lng": "81.1496"
                  }
                },
                "phone": "089639534610",
                "website": "satu.org",
                "company": {
                  "name": "satu.Inc",
                  "catchPhrase": "Multi-layered client-server neural-net",
                  "bs": "harness real-time e-markets"
                }
              }

### Create a New Users [POST /users]

+ Request (application/json)

     + Headers

            Accept : application/json

     + Body

              {
                "name": "nama 1",
                "username": "satu",
                "email": "1@gmail.com",
                "address": {
                  "street": "jalan 1",
                  "suite": "apt 1",
                  "city": "kota 1",
                  "zipcode": "92998-3874",
                  "geo":
                    "lat": "-37.3159",
                    "lng": "81.1496"
                  }
                },
                "phone": "089639534610",
                "website": "satu.org",
                "company": {
                  "name": "satu.Inc",
                  "catchPhrase": "Multi-layered client-server neural-net",
                  "bs": "harness real-time e-markets"
                },
                "password":"abbydarda"
              }

+ Response 201 (application/json)

     + Body

              {
                "id": 1,
                "name": "nama 1",
                "username": "satu",
                "email": "1@gmail.com",
                "address": {
                  "street": "jalan 1",
                  "suite": "apt 1",
                  "city": "kota 1",
                  "zipcode": "92998-3874",
                  "geo": {
                    "lat": "-37.3159",
                    "lng": "81.1496"
                  }
                },
                "phone": "089639534610",
                "website": "satu.org",
                "company": {
                  "name": "satu.Inc",
                  "catchPhrase": "Multi-layered client-server neural-net",
                  "bs": "harness real-time e-markets"
                }
              }

### Update a Users [PUT /users/{id}]

+ Parameters

     + id:1

+ Request (application/json)

     + Headers

            Authoriation: Bearer abcdefghijklmnopqrstupwxyz

            Accept : application/json

     + Body

              {
                "name": "nama 1",
                "username": "satu",
                "email": "1@gmail.com",
                "address": {
                  "street": "jalan 1",
                  "suite": "apt 1",
                  "city": "kota 1",
                  "zipcode": "92998-3874",
                  "geo": {
                    "lat": "-37.3159",
                    "lng": "81.1496"
                  }
                },
                "phone": "089639534615",
                "website": "satu.org",
                "company": {
                  "name": "satu.Inc",
                  "catchPhrase": "Multi-layered client-server neural-net",
                  "bs": "harness real-time e-markets"
                }
              }

+ Response 200 (application/json)

     + Body

              {
                "id": 1,
                "name": "nama 1",
                "username": "satu",
                "email": "1@gmail.com",
                "address": {
                  "street": "jalan 1",
                  "suite": "apt 1",
                  "city": "kota 1",
                  "zipcode": "92998-3874",
                  "geo": {
                    "lat": "-37.3159",
                    "lng": "81.1496"
                  }
                },
                "phone": "089639534615",
                "website": "satu.org",
                "company": {
                  "name": "satu.Inc",
                  "catchPhrase": "Multi-layered client-server neural-net",
                  "bs": "harness real-time e-markets"
                }
              }

### Delete a Users [DELETE /users/{id}]

+ Parameters

     + id:1

+ Request (application/json)

     + Headers

            Authoriation: Bearer abcdefghijklmnopqrstupwxyz

            Accept : application/json

+ Response 200 (application/json)

      + Body

              {}
